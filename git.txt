1:install git

	$ sudo apt-get update
check git is install nor not
	$ apt-cache policy git
install git
	$ sudo apt-get install git

............................................

check git version
	$git --version
...............................................

2:Config git


	$ git config --global user.name "mamirad"
	$ git config --global user.email "amirad2020@gmail.com"

check config list
	$git config --list



..........................................................

show ssh 
	$ssh-keygen -t rsa -b 4096 -C "amirad2020@gmail.com"
	$cat ~/.ssh/id_rsa.pub

.........................................................

3:git init

	$ git init
this msg will be printed
Initialized empty Git repository in /home/fifjc/folder1/homework2/myapp/forgit/.git/

Add files
	git add -A
check status
	$ git status
...................................................................

4: push  code to repostry

git commit -m "first commit"
git remote add origin git@github.com:mamirad/revise_crud.git
git push -u origin master



change exiting repository
git remote set-url origin https://git@github.com:mamirad/bcs.git





Create the branch on your local machine and switch in this branch :

$ git checkout -b [name_of_your_new_branch]
Change working branch :

$ git checkout [name_of_your_new_branch]
Push the branch on github :

$ git push origin [name_of_your_new_branch]
When you want to commit something in your branch, be sure to be in your branch. Add -u parameter to set upstream.

You can see all branches created by using :

$ git branch
Which will show :

* approval_messages
  master
  master_clean
Add a new remote for your branch :

commit shift branch else it ll be aborat
 git stash



$ git remote add [name_of_your_remote] 
Push changes from your commit into your branch :

$ git push [name_of_your_new_remote] [name_of_your_branch]
Update your branch when the original branch from official repository has been updated :

$ git fetch [name_of_your_remote]
Then you need to apply to merge changes, if your branch is derivated from develop you need to do :

$ git merge [name_of_your_remote]/develop
Delete a branch on your local filesystem :

$ git branch -d [name_of_your_new_branch]
To force the deletion of local branch on your filesystem :

$ git branch -D [name_of_your_new_branch]
Delete the branch on github :

$ git push origin :[name_of_your_new_branch]



............................................................................................................
how to work
1: get the pull form v2
2:make changes in code
3:create new branch name as SYP-1923-<ticket updation titile>
	 git checkout -b SYP-1923-remove-unused-header
4:git gui
	commit code with title
	push


branch name for auto fill form ll be SYP-1937-share-your-experience-form





uncommit code branch
git reset --soft HEAD^


git reset --hard





